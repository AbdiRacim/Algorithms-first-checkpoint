

PROCEDURE Read_vectors(VAR vectorArr : ARRAY_OF FLOAT)
VAR
    i : INTEGER
BEGIN
    FOR i FROM 0 TO size STEP 1  DO
        Read(vectorArr[i]);
    END_FOR

END


PROCEDURE dot_Product(VAR V1, V2 : ARRAY_OF FLOAT)
VAR
    i : INTEGER
    ps : FLOAT := 0
BEGIN

    FOR i FROM 0 TO V1 - 1 STEP 1  DO
        ps := V1[i] * V2[i];
    END_FOR

END


ALGORITHM Verify orthogonal
VAR
    vectorArr : ARRAY_OF FLOAT[100]; 
    i, j : INTEGER   
BEGIN

    Read_vectors(vectorArr);

    dot_Product(V1, V2);

    FOR i FROM 0 TO size - 1 STEP 1  DO
        FOR j FROM i + 1 TO size - 1 STEP 1 DO
            IF (dot_Product(vectorArr[i], vectorArr[j]) = 0) THEN
                Write(vectorArr[i], " and ", vectorArr[j], " are orthogonal because their point products are equal to zero");
                ELSE
                Write(vectorArr[i], " and ", vectorArr[j], " are not orthogonal because their point products are not equal to zero");
            END_IF
        END_FOR
    END_FOR

END